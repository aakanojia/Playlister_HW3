{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarya\\\\OneDrive\\\\Documents\\\\SBU\\\\CSE 316\\\\Playlister_HW3\\\\Playlister_HW3\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditToolbar() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  const addSong = () => {\n    let song = {\n      title: \"Untitled\",\n      artist: \"Unknown\",\n      youTubeId: \"dQw4w9WgXcQ\"\n    };\n    const id = store.currentList._id;\n    const name = store.currentList.name;\n    const songs = store.currentList.songs.map(song => {\n      return {\n        title: song.title,\n        artist: song.artist,\n        youTubeId: song.youTubeId\n      };\n    });\n    let playlist = {\n      name,\n      songs: [...songs, song]\n    };\n    store.updateCurrentList(id, playlist);\n  };\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n  let editStatus = false;\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: editStatus,\n      value: \"+\",\n      className: enabledButtonClass,\n      onClick: addSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: editStatus,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: editStatus,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: editStatus,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n_c = EditToolbar;\nexport default EditToolbar;\nvar _c;\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","addSong","song","title","artist","youTubeId","id","currentList","_id","name","songs","map","playlist","updateCurrentList","handleUndo","undo","handleRedo","redo","handleClose","push","closeCurrentList","editStatus","isListNameEditActive"],"sources":["C:/Users/aarya/OneDrive/Documents/SBU/CSE 316/Playlister_HW3/Playlister_HW3/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n\r\n    let enabledButtonClass = \"playlister-button\";\r\n\r\n    const addSong = () => {\r\n        let song = {\r\n            title: \"Untitled\",\r\n            artist: \"Unknown\",\r\n            youTubeId: \"dQw4w9WgXcQ\",\r\n        };\r\n\r\n        const id = store.currentList._id;\r\n        const name = store.currentList.name;\r\n        const songs = store.currentList.songs.map((song) => {\r\n            return {\r\n                title: song.title,\r\n                artist: song.artist,\r\n                youTubeId: song.youTubeId,\r\n            };\r\n        });\r\n\r\n        let playlist = {\r\n            name,\r\n            songs: [...songs, song],\r\n        };\r\n        \r\n        store.updateCurrentList(id, playlist);\r\n    }\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n    function handleClose() {\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n    }\r\n    let editStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        editStatus = true;\r\n    }\r\n    return (\r\n        <span id=\"edit-toolbar\">\r\n            <input\r\n                type=\"button\"\r\n                id='add-song-button'\r\n                disabled={editStatus}\r\n                value=\"+\"\r\n                className={enabledButtonClass}\r\n                onClick={addSong}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='undo-button'\r\n                disabled={editStatus}\r\n                value=\"⟲\"\r\n                className={enabledButtonClass}\r\n                onClick={handleUndo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='redo-button'\r\n                disabled={editStatus}\r\n                value=\"⟳\"\r\n                className={enabledButtonClass}\r\n                onClick={handleRedo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='close-button'\r\n                disabled={editStatus}\r\n                value=\"&#x2715;\"\r\n                className={enabledButtonClass}\r\n                onClick={handleClose}\r\n            />\r\n        </span>);\r\n}\r\n\r\nexport default EditToolbar;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACC,kBAAkB,CAAC;EAChD,MAAMI,OAAO,GAAGH,UAAU,EAAE;EAE5B,IAAII,kBAAkB,GAAG,mBAAmB;EAE5C,MAAMC,OAAO,GAAG,MAAM;IAClB,IAAIC,IAAI,GAAG;MACPC,KAAK,EAAE,UAAU;MACjBC,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAE;IACf,CAAC;IAED,MAAMC,EAAE,GAAGR,KAAK,CAACS,WAAW,CAACC,GAAG;IAChC,MAAMC,IAAI,GAAGX,KAAK,CAACS,WAAW,CAACE,IAAI;IACnC,MAAMC,KAAK,GAAGZ,KAAK,CAACS,WAAW,CAACG,KAAK,CAACC,GAAG,CAAET,IAAI,IAAK;MAChD,OAAO;QACHC,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBC,MAAM,EAAEF,IAAI,CAACE,MAAM;QACnBC,SAAS,EAAEH,IAAI,CAACG;MACpB,CAAC;IACL,CAAC,CAAC;IAEF,IAAIO,QAAQ,GAAG;MACXH,IAAI;MACJC,KAAK,EAAE,CAAC,GAAGA,KAAK,EAAER,IAAI;IAC1B,CAAC;IAEDJ,KAAK,CAACe,iBAAiB,CAACP,EAAE,EAAEM,QAAQ,CAAC;EACzC,CAAC;EACD,SAASE,UAAU,GAAG;IAClBhB,KAAK,CAACiB,IAAI,EAAE;EAChB;EACA,SAASC,UAAU,GAAG;IAClBlB,KAAK,CAACmB,IAAI,EAAE;EAChB;EACA,SAASC,WAAW,GAAG;IACnBnB,OAAO,CAACoB,IAAI,CAAC,GAAG,CAAC;IACjBrB,KAAK,CAACsB,gBAAgB,EAAE;EAC5B;EACA,IAAIC,UAAU,GAAG,KAAK;EACtB,IAAIvB,KAAK,CAACwB,oBAAoB,EAAE;IAC5BD,UAAU,GAAG,IAAI;EACrB;EACA,oBACI;IAAM,EAAE,EAAC,cAAc;IAAA,wBACnB;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,iBAAiB;MACpB,QAAQ,EAAEA,UAAW;MACrB,KAAK,EAAC,GAAG;MACT,SAAS,EAAErB,kBAAmB;MAC9B,OAAO,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QACnB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAEoB,UAAW;MACrB,KAAK,EAAC,QAAG;MACT,SAAS,EAAErB,kBAAmB;MAC9B,OAAO,EAAEc;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAEO,UAAW;MACrB,KAAK,EAAC,QAAG;MACT,SAAS,EAAErB,kBAAmB;MAC9B,OAAO,EAAEgB;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,cAAc;MACjB,QAAQ,EAAEK,UAAW;MACrB,KAAK,EAAC,QAAU;MAChB,SAAS,EAAErB,kBAAmB;MAC9B,OAAO,EAAEkB;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AACf;AAAC,GA/EQrB,WAAW;EAAA,QAEAD,UAAU;AAAA;AAAA,KAFrBC,WAAW;AAiFpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}