{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarya\\\\OneDrive\\\\Documents\\\\SBU\\\\CSE 316\\\\Playlister_HW3\\\\Playlister_HW3\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\nimport AddSong_Transaction from \"../transactions/AddSong_Transaction\";\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditToolbar() {\n  _s();\n  const {\n    store,\n    tps\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  const canAddSong = store.currentList !== null;\n  const canUndo = tps.hasTransactionToUndo();\n  const canRedo = tps.hasTransactionToRedo();\n  const canClose = store.currentList !== null;\n  const addSong = () => {\n    let song = {\n      title: \"Untitled\",\n      artist: \"Unknown\",\n      youTubeId: \"dQw4w9WgXcQ\"\n    };\n    tps.addTransaction(new AddSong_Transaction(store, store.currentList.songs.length, song));\n  };\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  function handleClose() {\n    tps.clearAllTransactions();\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: !canAddSong,\n      value: \"+\",\n      className: enabledButtonClass,\n      onClick: addSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: !canUndo,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: editStatus,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: editStatus,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(EditToolbar, \"WXbJE32FsIHxTRFHVkfRGjHcrd0=\", false, function () {\n  return [useHistory];\n});\n_c = EditToolbar;\nexport default EditToolbar;\nvar _c;\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","AddSong_Transaction","EditToolbar","store","tps","history","enabledButtonClass","canAddSong","currentList","canUndo","hasTransactionToUndo","canRedo","hasTransactionToRedo","canClose","addSong","song","title","artist","youTubeId","addTransaction","songs","length","handleUndo","undo","handleRedo","redo","handleClose","clearAllTransactions","push","closeCurrentList","editStatus"],"sources":["C:/Users/aarya/OneDrive/Documents/SBU/CSE 316/Playlister_HW3/Playlister_HW3/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddSong_Transaction from \"../transactions/AddSong_Transaction\"\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store, tps } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n\r\n    let enabledButtonClass = \"playlister-button\";\r\n\r\n    const canAddSong = store.currentList !== null;\r\n    const canUndo = tps.hasTransactionToUndo();\r\n    const canRedo = tps.hasTransactionToRedo();\r\n    const canClose = store.currentList !== null;\r\n\r\n    const addSong = () => {\r\n        let song = {\r\n            title: \"Untitled\",\r\n            artist: \"Unknown\",\r\n            youTubeId: \"dQw4w9WgXcQ\",\r\n        };\r\n\r\n        tps.addTransaction(\r\n            new AddSong_Transaction(store, store.currentList.songs.length, song)\r\n        );\r\n    }\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n    function handleClose() {\r\n        tps.clearAllTransactions();\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n    }\r\n    return (\r\n        <span id=\"edit-toolbar\">\r\n            <input\r\n                type=\"button\"\r\n                id='add-song-button'\r\n                disabled={!canAddSong}\r\n                value=\"+\"\r\n                className={enabledButtonClass}\r\n                onClick={addSong}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='undo-button'\r\n                disabled={!canUndo}\r\n                value=\"⟲\"\r\n                className={enabledButtonClass}\r\n                onClick={handleUndo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='redo-button'\r\n                disabled={editStatus}\r\n                value=\"⟳\"\r\n                className={enabledButtonClass}\r\n                onClick={handleRedo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='close-button'\r\n                disabled={editStatus}\r\n                value=\"&#x2715;\"\r\n                className={enabledButtonClass}\r\n                onClick={handleClose}\r\n            />\r\n        </span>);\r\n}\r\n\r\nexport default EditToolbar;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGN,UAAU,CAACC,kBAAkB,CAAC;EACrD,MAAMM,OAAO,GAAGL,UAAU,EAAE;EAE5B,IAAIM,kBAAkB,GAAG,mBAAmB;EAE5C,MAAMC,UAAU,GAAGJ,KAAK,CAACK,WAAW,KAAK,IAAI;EAC7C,MAAMC,OAAO,GAAGL,GAAG,CAACM,oBAAoB,EAAE;EAC1C,MAAMC,OAAO,GAAGP,GAAG,CAACQ,oBAAoB,EAAE;EAC1C,MAAMC,QAAQ,GAAGV,KAAK,CAACK,WAAW,KAAK,IAAI;EAE3C,MAAMM,OAAO,GAAG,MAAM;IAClB,IAAIC,IAAI,GAAG;MACPC,KAAK,EAAE,UAAU;MACjBC,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAE;IACf,CAAC;IAEDd,GAAG,CAACe,cAAc,CACd,IAAIlB,mBAAmB,CAACE,KAAK,EAAEA,KAAK,CAACK,WAAW,CAACY,KAAK,CAACC,MAAM,EAAEN,IAAI,CAAC,CACvE;EACL,CAAC;EACD,SAASO,UAAU,GAAG;IAClBnB,KAAK,CAACoB,IAAI,EAAE;EAChB;EACA,SAASC,UAAU,GAAG;IAClBrB,KAAK,CAACsB,IAAI,EAAE;EAChB;EACA,SAASC,WAAW,GAAG;IACnBtB,GAAG,CAACuB,oBAAoB,EAAE;IAC1BtB,OAAO,CAACuB,IAAI,CAAC,GAAG,CAAC;IACjBzB,KAAK,CAAC0B,gBAAgB,EAAE;EAC5B;EACA,oBACI;IAAM,EAAE,EAAC,cAAc;IAAA,wBACnB;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,iBAAiB;MACpB,QAAQ,EAAE,CAACtB,UAAW;MACtB,KAAK,EAAC,GAAG;MACT,SAAS,EAAED,kBAAmB;MAC9B,OAAO,EAAEQ;IAAQ;MAAA;MAAA;MAAA;IAAA,QACnB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAE,CAACL,OAAQ;MACnB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEH,kBAAmB;MAC9B,OAAO,EAAEgB;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAEQ,UAAW;MACrB,KAAK,EAAC,QAAG;MACT,SAAS,EAAExB,kBAAmB;MAC9B,OAAO,EAAEkB;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,cAAc;MACjB,QAAQ,EAAEM,UAAW;MACrB,KAAK,EAAC,QAAU;MAChB,SAAS,EAAExB,kBAAmB;MAC9B,OAAO,EAAEoB;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AACf;AAAC,GApEQxB,WAAW;EAAA,QAEAF,UAAU;AAAA;AAAA,KAFrBE,WAAW;AAsEpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}